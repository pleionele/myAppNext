{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/eleana/Documents/nextTrial/myApp/pages/speaker.js\";\nimport React from 'react';\nimport DigitalClock from \"../src/DigitalClock\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport SpeakerCard from \"./../src/SpeakerCard\";\n\nvar Speakers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Speakers, _React$Component);\n\n  _createClass(Speakers, null, [{\n    key: \"getInitialProps\",\n    // next runs the getinitialprops before it calls the constructor\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // return ({\n                //     time: new Date().toISOString()\n                // });\n                // const newPromise = new Promise((resolve,reject) => {\n                //     setInterval(\n                //         () => resolve({\n                //             time: new Date().toISOString()\n                //         }),3000\n                //     );\n                // });\n                // return newPromise;\n                response = axios.get(\"http://localhost:4000/speakers\").then(function (response) {\n                  console.log(response);\n                  return {\n                    hasErrored: false,\n                    speakerData: response.data\n                  };\n                }).catch(function (error) {\n                  return {\n                    hasErrored: true,\n                    message: error.message\n                  };\n                });\n                return _context.abrupt(\"return\", response);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Speakers(props) {\n    var _this;\n\n    _classCallCheck(this, Speakers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Speakers).call(this, props));\n    console.log(props);\n    _this.state = {\n      speakerData: props.speakerData //  time: props.time,\n\n    };\n    return _this;\n  }\n\n  _createClass(Speakers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} //    this.interval= setInterval(() => {\n    //         this.tick();\n    //     }, 1000);\n    // tick() {\n    //     this.setState({\n    //         time: new Date().toISOString()\n    //     });\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      //return React.createElement(\"h1\", { }, \"Hello from the function side\" + this.state.time);\n      // return <h1>Hello from the function side!!!: {this.state.time}</h1>;\n      // return <DigitalClock time={this.state.time}></DigitalClock>\n      return (// <React.Fragment>\n        //     <Link href=\"/sessions\">\n        //         <a>Sessions</a>\n        //     </Link>\n        //     <ul>\n        //         {\n        //         this.state.speakerData.map(\n        //             (speaker) => {\n        //                 return (\n        //                     <li key={speaker.id}>\n        //                     {speaker.firstName} {speaker.lastName}\n        //                 </li>)\n        //             })\n        //         }\n        //     </ul>\n        // </React.Fragment> \n        React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-deck\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, this.state.speakerData.map(function (speaker) {\n          return React.createElement(\"div\", {\n            className: \"btn btn-lg btn-block btn-outline-primary margintopbottom10\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(SpeakerCard, {\n            speaker: speaker,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }));\n        }))))\n      );\n    }\n  }, {\n    key: \"compentWillUnMount\",\n    value: function compentWillUnMount() {// clearInterval(this.interval)\n    }\n  }]);\n\n  return Speakers;\n}(React.Component);\n\nexport default Speakers;","map":{"version":3,"sources":["/Users/eleana/Documents/nextTrial/myApp/pages/speaker.js"],"names":["React","DigitalClock","axios","Link","SpeakerCard","Speakers","response","get","then","console","log","hasErrored","speakerData","data","catch","error","message","props","state","map","speaker","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;IAEMC,Q;;;;;;;AAEF;;;;;;;;;;AAEI;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEMC,gBAAAA,Q,GAAWJ,KAAK,CAACK,GAAN,CAAU,gCAAV,EACZC,IADY,CAET,UAACF,QAAD,EAAc;AACVG,kBAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,yBAAO;AACHK,oBAAAA,UAAU,EAAE,KADT;AAEHC,oBAAAA,WAAW,EAAEN,QAAQ,CAACO;AAFnB,mBAAP;AAIH,iBARQ,EASfC,KATe,CAUb,UAAAC,KAAK,EAAI;AACL,yBAAO;AACHJ,oBAAAA,UAAU,EAAE,IADT;AAEHK,oBAAAA,OAAO,EAACD,KAAK,CAACC;AAFX,mBAAP;AAIH,iBAfY,C;iDAiBVV,Q;;;;;;;;;;;;;;;;;;AAEX,oBAAaW,KAAb,EAAoB;AAAA;;AAAA;;AAChB,kFAAMA,KAAN;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACA,UAAKC,KAAL,GAAa;AACTN,MAAAA,WAAW,EAAEK,KAAK,CAACL,WADV,CAEX;;AAFW,KAAb;AAHgB;AAOnB;;;;wCAEmB,CAIlB,C,CAHF;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;6BAES;AACN;AACC;AACD;AACC,aACI;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKM,KAAL,CAAWN,WAAX,CAAuBO,GAAvB,CACG,UAAAC,OAAO;AAAA,iBACH;AAAK,YAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,WAAD;AAAa,YAAA,OAAO,EAAEA,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADG;AAAA,SADV,CADL,CADH,CADL;AAnBJ;AAkCH;;;yCAEoB,CAClB;AACF;;;;EAlGkBpB,KAAK,CAACqB,S;;AAqG7B,eAAehB,QAAf","sourcesContent":["import React from 'react';\n\nimport DigitalClock from \"../src/DigitalClock\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport SpeakerCard from \"./../src/SpeakerCard\";\n\nclass Speakers extends React.Component{\n\n    // next runs the getinitialprops before it calls the constructor\n    static async getInitialProps() {\n        // return ({\n        //     time: new Date().toISOString()\n        // });\n\n        // const newPromise = new Promise((resolve,reject) => {\n        //     setInterval(\n        //         () => resolve({\n        //             time: new Date().toISOString()\n        //         }),3000\n        //     );\n        // });\n        // return newPromise;\n\n        const response = axios.get(\"http://localhost:4000/speakers\")\n            .then(\n                (response) => {\n                    console.log(response)\n                    return {\n                        hasErrored: false,\n                        speakerData: response.data,\n                    };\n                }\n        ).catch(\n            error => {\n                return {\n                    hasErrored: true,\n                    message:error.message,\n                }\n            }\n        );\n        return response;\n }\n    constructor (props) {\n        super(props);\n        console.log(props);\n        this.state = {\n            speakerData: props.speakerData,\n          //  time: props.time,\n        };\n    }\n\n    componentDidMount() {\n    //    this.interval= setInterval(() => {\n    //         this.tick();\n    //     }, 1000);\n     }\n    // tick() {\n    //     this.setState({\n    //         time: new Date().toISOString()\n    //     });\n    // }\n\n    render() {\n       //return React.createElement(\"h1\", { }, \"Hello from the function side\" + this.state.time);\n        // return <h1>Hello from the function side!!!: {this.state.time}</h1>;\n       // return <DigitalClock time={this.state.time}></DigitalClock>\n        return (\n            // <React.Fragment>\n            //     <Link href=\"/sessions\">\n            //         <a>Sessions</a>\n            //     </Link>\n\n            //     <ul>\n            //         {\n            //         this.state.speakerData.map(\n            //             (speaker) => {\n            //                 return (\n            //                     <li key={speaker.id}>\n            //                     {speaker.firstName} {speaker.lastName}\n            //                 </li>)\n            //             })\n            //         }\n            //     </ul>\n            // </React.Fragment> \n\n            <div className=\"container\">\n                 <div className=\"row\">\n                    <div className=\"card-deck\">\n                        {this.state.speakerData.map(\n                            speaker => \n                                <div className=\"btn btn-lg btn-block btn-outline-primary margintopbottom10\">\n                                    <SpeakerCard speaker={speaker} />\n                                </div>\n                    \n                        )\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    compentWillUnMount() {\n       // clearInterval(this.interval)\n    }\n}\n\nexport default Speakers;"]},"metadata":{},"sourceType":"module"}
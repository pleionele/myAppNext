{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/eleana/Documents/nextTrial/myApp/pages/speaker.js\";\nimport React from \"react\";\nimport react from \"react\";\nimport axios from 'axios';\nimport SpeakerCard from \"../src/SpeakerCard\";\n\nvar Speakers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Speakers, _React$Component);\n\n  _createClass(Speakers, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var promise;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                promise = axios.get('http://localhost:4000/speakers').then(function (response) {\n                  return {\n                    hasErrored: false,\n                    speakerData: response.data\n                  };\n                }).catch(function (error) {\n                  return {\n                    hasErrored: true,\n                    message: error.message\n                  };\n                });\n                return _context.abrupt(\"return\", promise);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Speakers(props) {\n    var _this;\n\n    _classCallCheck(this, Speakers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Speakers).call(this, props));\n    _this.state = {\n      hasErrored: props.hasErrored,\n      message: props.message,\n      speakerData: props.speakerData\n    };\n    return _this;\n  }\n\n  _createClass(Speakers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-deck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.speakerData.map(function (speaker) {\n        return React.createElement(\"div\", {\n          className: \"card col-4 cardmin margintopbottom20\",\n          key: speaker.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(SpeakerCard, {\n          speaker: speaker,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return Speakers;\n}(React.Component);\n\nexport default Speakers;","map":{"version":3,"sources":["/Users/eleana/Documents/nextTrial/myApp/pages/speaker.js"],"names":["react","axios","SpeakerCard","Speakers","promise","get","then","response","hasErrored","speakerData","data","catch","error","message","props","state","map","speaker","id","React","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;IAGMC,Q;;;;;;;;;;;;;;;;AAGMC,gBAAAA,O,GAAUH,KAAK,CAACI,GAAN,CAAU,gCAAV,EACdC,IADc,CACT,UAAAC,QAAQ,EAAI;AACb,yBAAO;AACHC,oBAAAA,UAAU,EAAE,KADT;AAEHC,oBAAAA,WAAW,EAAEF,QAAQ,CAACG;AAFnB,mBAAP;AAIH,iBANa,EAOTC,KAPS,CAOH,UAAAC,KAAK,EAAI;AACZ,yBAAO;AACHJ,oBAAAA,UAAU,EAAE,IADT;AAEHK,oBAAAA,OAAO,EAAED,KAAK,CAACC;AAFZ,mBAAP;AAIH,iBAZS,C;iDAaPT,O;;;;;;;;;;;;;;;;;;AAGX,oBAAYU,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTP,MAAAA,UAAU,EAAEM,KAAK,CAACN,UADT;AAETK,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFN;AAGTJ,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAHV,KAAb;AAFe;AAOlB;;;;wCAGmB,CAEnB;;;2CAEuB,CAEvB;;;6BAGQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKM,KAAL,CAAWN,WAAX,CAAuBO,GAAvB,CAA2B,UAACC,OAAD;AAAA,eACxB;AAAK,UAAA,SAAS,EAAC,sCAAf;AAAsD,UAAA,GAAG,EAAEA,OAAO,CAACC,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADwB;AAAA,OAA3B,CADL,CADJ,CADJ,CADJ;AAaH;;;;EApDkBE,KAAK,CAACC,S;;AAuD7B,eAAejB,QAAf","sourcesContent":["import react from \"react\";\nimport axios from 'axios';\nimport SpeakerCard from \"../src/SpeakerCard\";\n\n\nclass Speakers extends React.Component {\n\n    static async getInitialProps () {\n        var promise = axios.get('http://localhost:4000/speakers').\n        then(response => {\n            return {\n                hasErrored: false,\n                speakerData: response.data\n            };\n        })\n            .catch(error => {\n                return {\n                    hasErrored: true,\n                    message: error.message\n                }\n            });\n        return promise;\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasErrored: props.hasErrored,\n            message: props.message,\n            speakerData: props.speakerData\n        }\n    }\n\n\n    componentDidMount() {\n\n    }\n\n     componentWillUnmount() {\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"card-deck\">\n                        {this.state.speakerData.map((speaker) =>\n                            <div className=\"card col-4 cardmin margintopbottom20\" key={speaker.id}>\n                                <SpeakerCard speaker={speaker}/>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Speakers;\n"]},"metadata":{},"sourceType":"module"}
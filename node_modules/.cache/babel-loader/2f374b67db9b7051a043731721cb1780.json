{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport DigitalClock from \"../src/DigitalClock\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport SpeakerCard from \"../src/SpeakerCard\";\n\nvar Speakers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Speakers, _React$Component);\n\n  _createClass(Speakers, null, [{\n    key: \"getInitialProps\",\n    // next runs the getinitialprops before it calls the constructor\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // return ({\n                //     time: new Date().toISOString()\n                // });\n                // const newPromise = new Promise((resolve,reject) => {\n                //     setInterval(\n                //         () => resolve({\n                //             time: new Date().toISOString()\n                //         }),3000\n                //     );\n                // });\n                // return newPromise;\n                response = axios.get(\"http://localhost:4000/speakers\").then(function (response) {\n                  console.log(response);\n                  return {\n                    hasErrored: false,\n                    speakerData: response.data\n                  };\n                }).catch(function (error) {\n                  return {\n                    hasErrored: true,\n                    message: error.message\n                  };\n                });\n                return _context.abrupt(\"return\", response);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Speakers(props) {\n    var _this;\n\n    _classCallCheck(this, Speakers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Speakers).call(this, props));\n    console.log(props);\n    _this.state = {\n      speakerData: props.speakerData //  time: props.time,\n\n    };\n    return _this;\n  }\n\n  _createClass(Speakers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} //    this.interval= setInterval(() => {\n    //         this.tick();\n    //     }, 1000);\n    // tick() {\n    //     this.setState({\n    //         time: new Date().toISOString()\n    //     });\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      //return React.createElement(\"h1\", { }, \"Hello from the function side\" + this.state.time);\n      // return <h1>Hello from the function side!!!: {this.state.time}</h1>;\n      // return <DigitalClock time={this.state.time}></DigitalClock>\n      return (// <React.Fragment>\n        //     <Link href=\"/sessions\">\n        //         <a>Sessions</a>\n        //     </Link>\n        //     <ul>\n        //         {\n        //         this.state.speakerData.map(\n        //             (speaker) => {\n        //                 return (\n        //                     <li key={speaker.id}>\n        //                     {speaker.firstName} {speaker.lastName}\n        //                 </li>)\n        //             })\n        //         }\n        //     </ul>\n        // </React.Fragment> \n        React.createElement(\"div\", {\n          className: \"container\"\n        }, React.createElement(\"div\", {\n          className: \"row\"\n        }, React.createElement(\"div\", {\n          className: \"card-deck\"\n        }, this.state.speakerData.map(function (speaker) {\n          return React.createElement(\"div\", {\n            className: \"card col-4 cardmin margintopbottom20\",\n            key: speaker.id\n          }, React.createElement(SpeakerCard, {\n            speaker: speaker\n          }));\n        }))))\n      );\n    }\n  }, {\n    key: \"compentWillUnMount\",\n    value: function compentWillUnMount() {// clearInterval(this.interval)\n    }\n  }]);\n\n  return Speakers;\n}(React.Component);\n\nexport default Speakers;","map":null,"metadata":{},"sourceType":"module"}